[
    {
        "label": "requests,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests.",
        "description": "requests.",
        "detail": "requests.",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "get_instgaram_conversation",
        "kind": 2,
        "importPath": "helpers.messages",
        "description": "helpers.messages",
        "peekOfCode": "def get_instgaram_conversation():\n url = 'https://graph.facebook.com/v13.0/'\n conversation_url = url + '364595800072411' + '/conversations'\n param = dict()\n param['platform'] = 'instagram'\n param['access_token'] = os.getenv('INSTAGRAM_MARKER')\n response = requests.get(url=conversation_url, params=param)\n response = response.json()\n return(response)\n# print(get_instgaram_conversation())",
        "detail": "helpers.messages",
        "documentation": {}
    },
    {
        "label": "get_messages",
        "kind": 2,
        "importPath": "helpers.messages",
        "description": "helpers.messages",
        "peekOfCode": "def get_messages(converstaion_id=''):\n url = 'https://graph.facebook.com/v13.0/'\n message_url = url + converstaion_id\n message_param = dict()\n message_param['fields'] = 'messages'\n message_param['access_token'] = os.getenv('INSTAGRAM_MARKER')\n # this will give us all the message_id in the conversation but not the messages directly\n response = requests.get(url=message_url, params=message_param)\n response = response.json()\n # so will get the details of the messages using their message_id",
        "detail": "helpers.messages",
        "documentation": {}
    },
    {
        "label": "verify",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def verify():\n  if request.args.get('hub.mode') == 'subscribe' and request.args.get('hub.verify_token') == VERIFY_TOKEN:\n    return request.args.get('hub.challenge'), 200\n  return 'Verification token mismatch', 403\n@app.route('/', methods=['POST'])\ndef webhook():\n  data = request.get_json()\n  print(data)\n  if data['object'] == 'instagram':\n    for entry in data['entry']:",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "webhook",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def webhook():\n  data = request.get_json()\n  print(data)\n  if data['object'] == 'instagram':\n    for entry in data['entry']:\n      for message in entry['messaging']:\n        if message.get('message'):\n          text = message['message'].get('text')\n          sender_id = message['sender']['id']\n          send_message(sender_id, text)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "authentication",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def authentication():\n  return render_template('templates/oauth.html')\ndef send_message(recipient_id, text):\n  url = f\"https://graph.facebook.com/v12.0/me/messages?access_token={INSTAGRAM_MARKER}\"\n  headers = {'Content-Type': 'application/json'}\n  payload = {\n    'recipient': {'id': recipient_id},\n    'message': {'text': text}\n  }\n  requests.post(url, headers=headers, json=payload)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "send_message",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def send_message(recipient_id, text):\n  url = f\"https://graph.facebook.com/v12.0/me/messages?access_token={INSTAGRAM_MARKER}\"\n  headers = {'Content-Type': 'application/json'}\n  payload = {\n    'recipient': {'id': recipient_id},\n    'message': {'text': text}\n  }\n  requests.post(url, headers=headers, json=payload)\nif __name__ == '__main__':\n  app.run(debug=True)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = Flask(__name__)\nVERIFY_TOKEN = os.getenv('VERIFY_TOKEN')\nINSTAGRAM_MARKER = os.getenv('INSTAGRAM_MARKER')\n@app.route('/', methods=['GET'])\ndef verify():\n  if request.args.get('hub.mode') == 'subscribe' and request.args.get('hub.verify_token') == VERIFY_TOKEN:\n    return request.args.get('hub.challenge'), 200\n  return 'Verification token mismatch', 403\n@app.route('/', methods=['POST'])\ndef webhook():",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "VERIFY_TOKEN",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "VERIFY_TOKEN = os.getenv('VERIFY_TOKEN')\nINSTAGRAM_MARKER = os.getenv('INSTAGRAM_MARKER')\n@app.route('/', methods=['GET'])\ndef verify():\n  if request.args.get('hub.mode') == 'subscribe' and request.args.get('hub.verify_token') == VERIFY_TOKEN:\n    return request.args.get('hub.challenge'), 200\n  return 'Verification token mismatch', 403\n@app.route('/', methods=['POST'])\ndef webhook():\n  data = request.get_json()",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "INSTAGRAM_MARKER",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "INSTAGRAM_MARKER = os.getenv('INSTAGRAM_MARKER')\n@app.route('/', methods=['GET'])\ndef verify():\n  if request.args.get('hub.mode') == 'subscribe' and request.args.get('hub.verify_token') == VERIFY_TOKEN:\n    return request.args.get('hub.challenge'), 200\n  return 'Verification token mismatch', 403\n@app.route('/', methods=['POST'])\ndef webhook():\n  data = request.get_json()\n  print(data)",
        "detail": "app",
        "documentation": {}
    }
]